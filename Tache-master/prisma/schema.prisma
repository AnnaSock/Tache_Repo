// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Taches {
  id            Int          @id @default(autoincrement())
  titre         String?
  description   String?
  audioPath     String?
  dateDebut     DateTime?
  dateFin       DateTime?
  image         String?
  statut        Etat?        @default(EN_COURS)
  utilisateurId Int
  utilisateur   Utilisateur  @relation(fields: [utilisateurId], references: [id])
  permission    Permission[]
  historique    Historique[]
}

enum Etat {
  EN_COURS
  TERMINER
  A_FAIRE
}

model Utilisateur {
  id         Int          @id @default(autoincrement())
  nom        String
  prenom     String
  email      String       @unique
  adresse    String?
  photo      String?
  login      String       @unique
  password   String       @unique
  telephone  Int?         @unique
  genre      Genre?
  tache      Taches[]
  permission Permission[]
  historique Historique[]
}

model Permission {
  id            Int         @id @default(autoincrement())
  utilisateurId Int
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])

  tacheId Int
  tache   Taches @relation(fields: [tacheId], references: [id])

  typePermission TypePermission
}

enum TypePermission {
  MODIFIER
  SUPPRIMER
}

enum Genre {
  HOMME
  FEMME
}

model Historique {
  id         Int        @id @default(autoincrement())
  action     TypeAction
  dateAction DateTime   @default(now())

  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId Int

  tache   Taches @relation(fields: [tacheId], references: [id])
  tacheId Int
}

enum TypeAction {
  MODIFICATION
  SUPPRESSION
  LECTURE
}
